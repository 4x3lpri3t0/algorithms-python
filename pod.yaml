apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"run":"pod"},"name":"pod","namespace":"default"},"spec":{"containers":[{"args":["consumer"],"image":"nginx","name":"pod","resources":{},"volumeMounts":[{"mountPath":"/var/app","name":"test-volume"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"name":"test-volume","secret":{"secretName":"ext-service-secret"}}]},"status":{}}
    creationTimestamp: "2022-01-31T21:26:43Z"
    labels:
      run: pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:run: {}
        f:spec:
          f:containers:
            k:{"name":"pod"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/app"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"test-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2022-01-31T21:26:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.17.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2022-01-31T21:27:01Z"
    name: pod
    namespace: default
    resourceVersion: "61867"
    uid: d2efad38-37d8-4e4f-ba99-af668ccf39a2
  spec:
    containers:
    - args:
      - consumer
      image: nginx
      imagePullPolicy: Always
      env:
        - name: API_ENDPOINT 
          valueFrom:
            configMapKeyRef:
              # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
              name: ext-service-configmap
              # Specify the key associated with the value
              key: api_endpoint
      name: pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/app
        name: test-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-vg6hx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: test-volume
      secret:
        defaultMode: 420
        secretName: ext-service-secret
    - name: default-token-vg6hx
      secret:
        defaultMode: 420
        secretName: default-token-vg6hx
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T21:26:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T21:26:43Z"
      message: 'containers with unready status: [pod]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T21:26:43Z"
      message: 'containers with unready status: [pod]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T21:26:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://896d11659cf4ff2b106f8395eb547f41710262ba19913ec7d78af6346d08b252
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:2834dc507516af02784808c5f48b7cbe38b8ed5d0f4837f16e78d00deb7e7767
      lastState:
        terminated:
          containerID: docker://896d11659cf4ff2b106f8395eb547f41710262ba19913ec7d78af6346d08b252
          exitCode: 127
          finishedAt: "2022-01-31T21:27:19Z"
          reason: Error
          startedAt: "2022-01-31T21:27:19Z"
      name: pod
      ready: false
      restartCount: 2
      started: false
      state:
        waiting:
          message: back-off 20s restarting failed container=pod pod=pod_default(d2efad38-37d8-4e4f-ba99-af668ccf39a2)
          reason: CrashLoopBackOff
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.3
    podIPs:
    - ip: 172.17.0.3
    qosClass: BestEffort
    startTime: "2022-01-31T21:26:43Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
